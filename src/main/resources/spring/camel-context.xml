<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

  <!-- You could also define a traditional camel context here -->
  <camelContext id="camel" xmlns="http://camel.apache.org/schema/spring" xmlns:order="http://fabric8.com/examples/order/v7">
      <from id="file-in" uri="file:work/jms/input"/>
      <choice id="route-choice-country">
        <when id="route-when-uk">
          <xpath>/order:order/order:customer/order:country = 'UK'</xpath>
          <log id="route-log-uk" message="Sending order ${file:name} to the UK"/>
          <to id="route-to-file-uk" uri="file:work/jms/output/uk"/>
        </when>
        <when id="route-when-us">
          <xpath>/order:order/order:customer/order:country = 'US'</xpath>
          <log id="route-log-us" message="Sending order ${file:name} to the US"/>
          <to id="route-to-file-us" uri="file:work/jms/output/us"/>
        </when>
        <otherwise id="route-when-other-country">
          <log id="route-log-other" message="Sending order ${file:name} to another country"/>
          <to id="route-to-file-other" uri="file:work/jms/output/others"/>
        </otherwise>
      </choice>
      <log id="route-final-log" message="Done processing ${file:name}"/>
    </route>
  </camelContext>

</beans>
